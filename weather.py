import time
import datetime
import configparser
from PyQt5 import uic, QtGui
from PyQt5.QtWidgets import QApplication
from gui.weather_ui import Ui_MainWindow
from gui.weather_ui import label
from pyowm import OWM
from pyowm.commons.exceptions import NotFoundError
from pyowm.commons.exceptions import APIRequestError
from pyowm.utils import config as cfg
from pyowm.utils import timestamps

owm = OWM(" ")
pyowmconfig = cfg.get_default_config()
pyowmconfig['language'] = 'ru'

Form, Window = uic.loadUiType('gui/weather.ui')
app = QApplication([])
window = Window()
form = Form()
form.setupUi(window)
window.show()
log = configparser.ConfigParser()
states = ['search', 'success', 'OWM_error', 'back']
# main function engine xD

def WeatherUI():
    local_time = datetime.datetime.now(tz=None)
    log = open("logs/logs.txt", "a+")
    try: # error handler by stepan for ui-app
        # line edit get\
        city = form.lineEdit.text()
        print(f"{states[0]} -> {city}")
        log.write(f"\n{local_time} - {states[0]} -> {city}")
        mgr = owm.weather_manager()
        observation = mgr.weather_at_place(city)
        weather = observation.weather
        tg = weather.temperature("celsius")
        local_temp = tg['temp']
        f_like = tg['feels_like']
        max_temp = tg['temp_max']
        min_temp = tg['temp_min']
        e_temp = "üå°"
        e_status = " "
        wind = weather.wind()['speed']
        pressure = weather.pressure['press']
        moisture = weather.humidity
        status = weather.detailed_status 

        # <--saxon-- 
        status_emoji = {
                "—è—Å–Ω–æ": "‚òÄÔ∏è",
                "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": "üå§",
                "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏": "üå•",
                "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å": "üå¶",
                "–ø–∞—Å–º—É—Ä–Ω–æ": "‚òÅÔ∏è",
                "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": "‚òÅÔ∏è",
                "–¥–æ–∂–¥—å": "üåß",
                "–º–≥–ª–∞": "üí®"
            }
        # -- saxon --> # 
        print(f"{states[1]} -> {city}")
        log.write(f"\n{local_time} - {states[1]}")
        return form.label.setText (f"                 –í –≥–æ—Ä–æ–¥–µ {city} —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {int(local_temp)} ¬∞C {e_temp} \n\
                    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {int(max_temp)} ¬∞C \n \
                    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {int(min_temp)}¬∞C \n \
                    –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {int(f_like)} ¬∞C \n \
                    –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {int(wind)} –º/c \n \
                    –î–∞–≤–ª–µ–Ω–∏–µ: {int(pressure)} –º–º.—Ä—Ç.—Å—Ç \n \
                    –í–ª–∞–≥–∞: {int(moisture)} % \n \
                    –ü–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é: {status} {status_emoji.get(status) or 'üåç'}")
    except (NotFoundError, APIRequestError):
        print(states[2])
        log.write(f"\n{local_time} - {states[2]}")
        e_error = "üö´"
        error = f'–í–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏:\n 1. –í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ "{city}"\n 2. –ì–æ—Ä–æ–¥–∞/—Å—Ç—Ä–∞–Ω—ã "{city} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"\n3. –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å.\n 4. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º {e_error} \
            \n\n–ï—Å–ª–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –æ—à–∏–±–∫—É, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: {" "} t.me/thetraextra'
        return form.label.setText( error )

def BtnBack():
    log = open("logs/logs.txt", "a+")
    local_time = datetime.datetime.now(tz=None)
    print(states[3])
    log.write(f"\n{local_time} - {states[3]}")
    return form.label.setText( label )

# get function where user click on the my button
form.pushButton.clicked.connect( WeatherUI )
form.pushButton_2.clicked.connect( BtnBack )
app.exec_()
